diff --git a/node_modules/app-builder-lib/.DS_Store b/node_modules/app-builder-lib/.DS_Store
new file mode 100644
index 0000000..32261d4
Binary files /dev/null and b/node_modules/app-builder-lib/.DS_Store differ
diff --git a/node_modules/app-builder-lib/electron-osx-sign/util.js b/node_modules/app-builder-lib/electron-osx-sign/util.js
index 107d8aa..4ea91f8 100644
--- a/node_modules/app-builder-lib/electron-osx-sign/util.js
+++ b/node_modules/app-builder-lib/electron-osx-sign/util.js
@@ -202,12 +202,23 @@ module.exports.walkAsync = async function (dirPath) {
       const stat = await fs.lstat(filePath)
       if (stat.isFile()) {
         switch (path.extname(filePath)) {
+          case '': // Binary
+           if (path.basename(filePath)[0] !== '.' && path.basename(filePath) != 'PULL_REQUEST_TEMPLATE') {
+             return getFilePathIfBinaryAsync(filePath)
+           } // Else reject hidden file
+           break
+         case '.dylib': // Dynamic library
+         case '.node': // Native node addon
+           return filePath
           case '.cstemp': // Temporary file generated from past codesign
             debuglog('Removing... ' + filePath)
             await fs.unlink(filePath)
             return
           default:
-            return getFilePathIfBinaryAsync(filePath)
+            if (path.extname(filePath).indexOf(' ') >= 0) {
+               // Still consider the file as binary if extension seems invalid
+               return getFilePathIfBinaryAsync(filePath)
+             }
         }
       } else if (stat.isDirectory() && !stat.isSymbolicLink()) {
         const result = await _walkAsync(filePath)
diff --git a/node_modules/app-builder-lib/templates/.DS_Store b/node_modules/app-builder-lib/templates/.DS_Store
new file mode 100644
index 0000000..a0d7491
Binary files /dev/null and b/node_modules/app-builder-lib/templates/.DS_Store differ
diff --git a/node_modules/app-builder-lib/templates/nsis/include/extractAppPackage.nsh b/node_modules/app-builder-lib/templates/nsis/include/extractAppPackage.nsh
index 886bebc..b35dc40 100644
--- a/node_modules/app-builder-lib/templates/nsis/include/extractAppPackage.nsh
+++ b/node_modules/app-builder-lib/templates/nsis/include/extractAppPackage.nsh
@@ -13,6 +13,11 @@
 	  !endif
 
     !insertmacro compute_files_for_current_arch
+
+  !else ifdef APP_ARM64
+    StrCpy $packageArch "ARM64"
+    !insertmacro arm64_app_files
+
   !else
     !insertmacro ia32_app_files
   !endif
